#!/bin/sh

# Timezone
export TZ="America/Sao_Paulo"

# Wit app credentials
export WIT_APP_ID=
export WIT_SERVER_TOKEN=

# Telegram bot key
export TELEGRAM_TOKEN=

# FB Messenger
export FB_PAGE_ACCESS_TOKEN=
export FB_VERIFY_TOKEN=
export FB_APP_SECRET=
export FB_PAGE_ID=

# Webserver
export PORT=
export MORE_RESULTS_IMAGE_URL=

# https://github.com/fczuardi/fake-clickbus-api
export CLICKBUS_URL="https://api-evaluation.clickbus.com.br/api/v1"
# export CLICKBUS_WEB_URL="https://m.clickbus.com.br/results"
# export CLICKBUS_WEB_URL_DATE_PARAM="date"
export CLICKBUS_WEB_URL="https://www.clickbus.com.br/pt/busca"
export CLICKBUS_WEB_URL_DATE_PARAM="ida"
export CLICKBUS_UTM_PARAMS=""
# Clickbus expects a form POST for opening the page of a specific trip
# since we can't do a post with a link from FB or Telegram, we serve a
# static html page to repass querystring parameters as POST to their url
# (see autopost.html file)
export BOT_URL=
export POLLO_PATH="."
export POST_TO_CLICKBUS_HACK_PATH=
export CLICKBUS_STORE=
export CLICKBUS_PLATFORM="API"
export CLICKBUS_WEB_POST_URL="https://www.clickbus.com.br/pt/reserva-de-assentos"

# ../../../ is the root of the project
# export FAKE_DATA_DIR="../../../data"

# Google URL Shortener
export GOOGLE_API_KEY=

# local persistence file
export STATE_FILE="../data/state.json" # if installed from git
# export STATE_FILE="../../../data/state.json" # if installed from npm

# answers.json file path to be used when answering questions from the FAQ
export FAQ_PATH=

# a local list of slugs see tasks/local-slug-db.sh for how to generate one
# based on a places.json return from Clickbus API
export SLUG_LIST_PATH=

# custom replies file, override any string of
export CUSTOM_REPLIES_PATH=

# error log debug file, if present wont reply debug messages to user
# export DEBUG_TO_LOGFILE="./debug.log"

# If the user should be informed of the privacy policy right after Telegram's /start
export PRIVACY_POLICY_ON_START="yes"

echo "Env vars updated"
